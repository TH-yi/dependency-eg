Environment-Based Design (EBD): A Methodology for Transdisciplinary Design. Concordia Institute for Information Systems Engineering, Concordia University, Montreal, Quebec, Canada H3G 1M8. This paper summarizes a design methodology - Environment Based Design (EBD) - developed over the last two decades. The EBD stems from the observation that design aims to change an existing environment to a desired one by generating a new artefact. Design starts from the environment, functions for the environment, and brings changes to the environment. This environment changing process implies the recursive evolution of design problems, design knowledge, and design solutions. Three basic activities are included in the EBD: environment analysis, conflict identification, and solution generation. In introducing the EBD, four major requirements for an effective design methodology are firstly formulated from the perspective of the nature of design, cognitive model of design, and the driving force underlying design. The mathematical, semantic and algorithmic foundations of the EBD are then presented to define methods and procedures for solving a design problem. Experimental validation and industrial applications are summarized to show the effectiveness of the EBD. Future research questions are also given in the paper. Intuitively, design is an activity that aims to change an existing environment to a desired one by creating a new artefact into the existing environment. The artefact must adapt to the goals and requirements of humans while obeying laws and rules existing in the environment from which it can never be separated. Therefore, design is driven by a need or an inspiration from the existing environment. The environment was there, is there, and will always be there. Any design action changes and only changes the environment. Design starts from the environment, serves the environment, and changes the environment. Transdisciplinary design is a design problem that is involved in different kinds of environment and environment interactions across different disciplines. The challenges faced by the transdisciplinary design problem solving include the collection and integration of information and knowledge from highly diversified domains.  Environment-Based Design is a methodology that provides step-by-step procedures to guide designers in this environment changing process. The methodology includes three interdependent activities: environment analysis, conflict identification, and solution generation. Throughout the entire design process, any newly generated design solution will be viewed as an environment component for the succeeding design activities. The design process continues until no more undesired conflict exists in the environment. A transdisciplinary design problem can be decomposed through the partitioning of the environment implied in the problem description. The design process can be creative and/or innovative under certain conditions. The rest of this paper is organized as follows: Section 2 formulates the major requirements for an effective design methodology, followed by Section 3 which introduces the fundamental methods included in EBD. Section 4 concludes the paper. Requirements on Design Methodology. Design methodology has experienced a great evolution since it became a subject of academic research in the 1960’s. In the early stages, influenced by the emergence of systems engineering, there was a design method movement mainly in the Europe aiming to divide design activities into components that are connected logically such that design tasks can be conducted in an orderly manner (Cross, 1984).  Compared to the long history of design practices, the study of design as a scientific discipline is quite young. This study is becoming more and more important because of an increasing need of “Best Design Practice” in optimizing the available yet limited resources for the benefit of mankind. A good design cannot be achieved unless designers are armed with both profound design knowledge and a sound design methodology (explicit or implicit). As a result, a variety of design theories and methodologies have been proposed in the last several decades, such as the systematic design methodology, decision-based design, theory of inventive problem-solving, axiomatic design, general design theory, formal design theory, exploration based design, total design, adaptable design, function based design, affordance based design, and design structure matrix.  However, based on an analysis of existing design methodologies, Tomiyama concluded that most of existing abstract design methodologies have not found wide applications in industry. This section will discuss the requirements for an effective design methodology, which will be critical for industrial applications. To put it in one sentence, a design methodology can be seen as a system of procedures to support designers in design activities. Therefore, in developing a design methodology, the following issues must be taken into account. What is the nature of design?  How does a design methodology support designer in design activities? What is the driving force behind design activities? Nature of design problem: recursion. As was indicated by Zeng and Cheng (1991), design is largely different from deduction, induction and abduction in that the conclusion [design solution or concept] of the reasoning is recursively dependent on the major premise [design knowledge] of the reasoning. Design is [thus] a process to simultaneously produce both the artefact [design solution or concept] and its behavior system [design knowledge]. Therefore, the logic of design is considered to be recursive, and thus addresses {given the environment and the function of a system} the reasoning process to construct the analytic reasoning of the system [design knowledge], to find the form [design solution or concept] which dominates the whole system. This logic form was later confirmed and discussed further by Rosenburg (1992). This phenomenon is also discussed in (Dong et al., 2015).  The recursive logic of design implies that during the design process the generation and evaluation of design solutions depend on design knowledge while the kind of design knowledge that can be used for the current design is determined by the design solutions (Zeng & Cheng, 1991). The design research community has now generally accepted this nature of the design process, though it is often called co-evolution in that design problems, design solutions, and design knowledge are updated simultaneously. Developments have been reached based on this recursive nature of design in a computational model by Zeng and Jing (1996), in a formal mathematical approach by Zeng and Gu (1999a), and in a form of design theory by Hatchuel and Weil (2003). This recursive nature of design also interprets the ill-structuredness of the design problem (Reitman, 1964; Simon, 1977). The recursive logic of design was represented in an equation as follows (Zeng & Jing, 1996). where S is a design solution whereas 𝐾𝑠 and 𝐾𝑒 are synthesis and evaluation knowledge, respectively. Along with Eq, the recursive logic also implies another equation (Zeng, 2001). where Rd is the design requirements. Design requirements 𝑅𝑑 is defined by 𝐾𝑒(𝑆), which is dynamically determined by S during the design process. This was represented in the following equation (Zeng & Gu, 1999a). where L is a collection of laws [knowledge] in the product’s working environment. L is a collection of knowledge in L that is associated with SRD. This indicates the dependence of design knowledge on design solutions and concepts. The three equations above were illustrated in Fig1 and Fig2, respectively. Fig1 shows that design solutions, design problems, and design knowledge change simultaneously and interdependently in the design process. Those three items constitute critical parts of the design space.  Fig2 reflects both Eq1 and 2, where design synthesis stretches the design space whereas design evaluation shrinks the design space. The interaction of both leads to final design solutions. As a matter of the fact, all of the existing design methodologies aim to solve Eq1, 2 and 3 under different assumptions. An effective design methodology should help designers jump out of the recursive loop between design problems, design knowledge, and design solutions. Support of design activities, creativity. Due to the difficulties resulting from the recursive nature of design, effective design methodologies are indispensable for guiding designers, particularly new designers, in dealing with the complexity appearing in their design activities. There are two great challenges faced by the effort to develop effective design methodologies. The first one lies in the contradiction between the determinism in a methodology and the randomness in the creativity. In other words, how can a design methodology, which is fundamentally based on logic, lead to creative solutions, which are random and unpredictable?  Zeng pointed out that the recursive logic of design, as reflected in Eq. (1), (2), and (3), implies a nonlinear dynamic mechanism, which can be chaotic under certain conditions. As a result, design solutions can be highly sensitive to its initial conditions. Furthermore, due to the recursive logic again, the initial condition the design problem may keep changing according to the previously generated design solution. Therefore, design solutions can be highly unpredictable because of the constant change of the initial conditions rooted in the recursive logic of design. The following lists three basic paths that may change the initial conditions of a design process. Formulating the design problem differently.   Extending synthesis knowledge. Changing the sequence of environment decomposition. A computer simulation was used to show quantitatively how the three paths above may contribute to the generation of significantly different design solutions. Therefore, an effective design methodology should lead to both routine and creative design naturally.  The second challenge in developing an effective design methodology lies in two contrasting facts. On the one hand, a natural design process is one in which designers can flexibly and freely explore various avenues to achieve design goals. On the other hand, any design methodology implies a set of well-structured steps for solving a design problem. This contradiction between the natural design process and the structure embedded in a design methodology triggers mental stresses on designers when applying the design methodology during the design process. To develop a more effective design methodology, we have adopted the Yerkes-Dodson law to design creativity. The Yerkes-Dodson law shows that there is an inverse U-shaped correlation between arousal and performance. According to the Y-D law, a medium level of arousal results in the best performance. In the context of innovative and creative design, we have made the following hypothesis. Design creativity may happen when a designer is in a state of medium level of arousal/stress. By applying the hypothesis above to design methodologies, it can be assumed that an effective design methodology should help a designer maintain his/her mental stress at an optimal level during the design process, as shown in Fig3. Therefore, in order for a design methodology to be useful and applicable to practices of innovative and creative design, the methodology must lead designers naturally to a medium arousal zone by taking into account the designer’s cognitive model.  The author and his research group has been studying the quantification of the designer’s cognitive processes, particularly the designer’s mental stress, though linguistic information, body language, as well as eye movement and EEG systems.  A new design creativity theory is proposed based on the two observations above (Nguyen & Zeng, 2012). The recursive logic of design implies a fundamental question to any design methodology: function (requirements) first or form (solution) first? This chicken-egg like problem leads to a great difficulty for all the function-based design approaches. where is the functional structure without having a solution in mind?  A fundamental concept in EBD is that function, form, requirements, solutions, knowledge, and other relevant design information are all present in each and every state of design. They trigger each other’s evolution during the design process. Mathematically, a challenge is how to embody all of those types of heterogeneous information in a homogeneous mathematical representation? To this end, the author has developed a new mathematical representation. Axiomatic Theory of Design Modeling (Zeng, 2002). Mathematically, Axiomatic Theory of Design Modeling (ATDM) is different from set theory in that there is no structural hierarchy; hence, membership operation does not exist anymore. Following this theory, a formal model of design could be derived to represent the syntactic structure of hierarchical evolving design objects and the dynamic design process. A major operation in ATDM is structure operation, denoted by, which is defined as the union of an object O and the interaction of the object with itself. where O is the structure of the object O. Everything in the universe can be seen as an object. Interactions between objects are also objects. Examples of interaction include force, movement, and system input and output. Structure operation provides a means to represent a hierarchical system with a single mathematical expression.  Due to the capacity of human cognition and the scope of an application, a group of primitive objects can always be defined as objects that cannot or need not to be further decomposed. where Oia is a primitive object whereas n is the number of primitive objects. As was discussed earlier in the paper, in the design process, any previously generated design concept can be treated as an environment component for the succeeding design. As a result, a new state of design can be defined as the structure of the old environment and the newly generated design concept, which is a partial design solution. The environment can be divided into three kinds: natural, built, and human.  Built environments are the artefacts designed and created by human beings whereas the human environment includes all of the human beings but particularly the human users of an artefact. Starting from a textual definition of a design problem, it was derived that the structure of the design problem can be represented in Table1, where S is the product; E is the product environment; lamda is a constraint relation; all the B’s constitute the boundary between the product and its environment. The boundary B has two kinds: structural and causes/effects. Since the boundary B is a relation between the product S and its environment E and the product is not known in advance in design, the design problem is defined by the only known information environment E. The environment structure, which is Ei, includes the description of the design solution at design stage i,  the  design  requirements  for  the  design  stage  i+1,  the  relevant  design  knowledge,  and  other  design information. As a result, Fig1 can be replaced by Fig4, which is more mathematically neat and intuitively meaningful. Following Axiomatic Theory of Design Modeling, the EBD methodology can be derived (Zeng, 2002), which includes three activities – environment analysis, conflict identification, and solution generation as follows. Environment analysis: define the current environment system. EBD: evolution of environment. where ne is the number of components included in the environment Ei at the ith design state; Eij is an environment component at the same design state. It should be noted that decisions on how many (ne) and what environment components (Eij) are included in Ei depend on designer’s experience and other factors relevant to the concerned design problem. A roadmap is provided to facilitate this process in (Chen & Zeng, 2006). Conflict identification: identify undesired conflicts Ci between environment relationships by using evaluation operator. Solution generation: generate a design solution si by resolving a group of chosen conflicts through a synthesis operator siK. The generated solution becomes a part of the new product environment for the succeeding design. As illustrated in Fig 5, the  three  activities  work  together  to  update  environment  and  its  internal relationships to solve a design problem. The design process continues with new environment analysis until no more undesired conflicts exist. EBD: process model. Since environment is the source of design requirements, design knowledge, and design solutions, EBD provides an effective approach for the designers to jump out of the recursive loop between them. Hence, the first requirement for an effective design methodology is satisfied in EBD. Furthermore, as was validated in (Zeng & Yao, 2009), creative design may happen naturally when designers follow the EBD, which meets the second requirement for EBD to be an effective design requirement. Finally, since the EBD process is driven by undesired conflicts in the current environment structure, the condition for the evolution of design is naturally included. This shows the fourth requirement for an effective design methodology holds for EBD. EBD: semantic foundation. Corresponding to Fig1 and Fig4, the EBD process can also be illustrated in Fig 6. On the one hand, a designer may have to remove some information from the current design state in order to identify the real intent behind the current design problem. On the other hand, the designer may also add information to complete the design state so that the existing undesired conflicts can be properly eliminated. Evolution of the design process. Semantics matter throughout the entire design process. Firstly, a designer must understand the design problem. In EBD, this is through environment analysis and conflict identification. Secondly, when one creates a design through solution generation, a meaning is indeed assigned to the artefact that he/she creates in the context/environment of the created artefact. Finally, one must interpret the meaning of the design to the artefact’s environment. This interpretation may be involved in the protection of intellectual properties implied in the design. This interpretation is also important in training the users of the artefact. Furthermore, this interpretation may mean that the artefact will carry out a function that it was not intended for by its original designer(s). In this semantics centered environment based design process, if one design carries a significantly surprising new meaning, then this design is called creative. The importance of semantics in design can be seen from Aurisicchio. In order to support the processing of semantics in design, Zeng proposed a Recursive Object Model (ROM), which also echoes the recursive logic of design (Zeng & Cheng, 1991). ROM provides the foundation of representation for EBD whereas the recursive logic is the backbone of design reasoning. Though ROM was originally developed to deal with linguistic information, it is being extended to process other design information as well. ROM can be seen as a refined representation of environment structure by including three types of interaction operation: constraint, predicate and connection. The ROM includes two kinds of objects, which are primitive and compound objects. Table 2 shows the graphic symbols in the ROM. Section3 will introduce ROM-based approaches for each of its three activities in the EBD. Everything in the universe is an object. It is an object that includes at least two other objects in it. It is a descriptive, limiting, or particularizing relation of one object to another. It is to connect two objects that do not constrain each other. It describes an act of an object on another or that describes the states of an object. The objective of environment analysis is to identify the environment in which the desired product is to work. According to the EBD, the environment includes its components and the relationships between those components. To move in either of the two directions as shown in Fig 6, a designer must ask the right questions (Wang & Zeng, 2009). Eris also highlighted the importance of the right question in design by posing the following questions. Can an effective decision-making process be performed without having high quality information? Can high quality information be acquired and generated without performing an effective inquiry process. In environment analysis, two kinds of questions will be asked. The first is generic questions for the clarification and extension of the meaning of a design problem whereas the second is domain specific questions for implicit design information related to the current problem. The ROM, as a linguistic tool in design, is used as the foundation for generating the questions. The generic questions aim to help designers better understand the design problem through linguistic analysis using ROM.  It is widely acknowledged that 5W1H questions what, who, when, where, why and how are important. however, experience is often heavily required in order to formulate the right questions to ask, when to ask what questions on which object. Based on the ROM, a strategy to ask the right 5W1H questions is developed to provide effective ways to obtain a good direction to solve a design problem, which is shown in Fig7. Table3 and Table4 show the rules to choose the objects to be questioned and the templates to ask questions about a chosen object. Question generation process in Environment Analysis. Before an object can be further defined, the objects constraining them should be refined. An object with the most undefined constraints should be considered first. If an object has the most number of constrains and/or predicates on other objects, then it should be considered first. For a concrete, proper, or abstract noun object N without any constraint. For a concrete, proper, or abstract noun N with an adjective constraint A. For an noun object A constraining an noun object N. For a verb V with its subject N1 and object N2. For a verb object V constrained by an adverb A with its subject N1 and object N2. For a verb V with an object N, but missing its subject .Domain specific questions. the objective of asking domain specific questions is to collect the information that would have significant influences on the given design problem. The information will be collected without imposing any assumption on the structure of the final design solutions. Therefore, collected information is composed by the domain relevant environment components and their relationships, which can be defined without the knowledge about design requirements and design solutions. As a generic design methodology, no domain specific template will be required. Instead, a roadmap is proposed as a guidance to facilitate the identification of complete environment components and their relations for the concerned design.  This roadmap categorizes product environment in terms of two criteria. One criterion partitions product environment based on the product lifecycle whereas the other classifies the product environment into natural, built, and human. This roadmap is shown in Fig8. Corresponding to the roadmap as shown in Fig8, Table5 gives the procedure for identifying environment components related to the concerned domain. Roadmap for domain related environment. Ask and answer the question. what is the lifecycle of the product to be designed? For each event included in the lifecycle, ask and answer the question: what are the relevant components for natural, built, and human environments for this event? Generate the ROM diagram for each answer and merge them back to the original ROM diagram. Apply the procedure for generic question asking. Roadmap for domain related environment: an example. Fig9 illustrates a case where there are seven events in the product lifecycle. For each event in the lifecycle, the environment components can be classified into a pyramid with the natural environment in the base and the human environment at the top. The rules for generating ROM diagrams from text can be found from Zeng. Methods and algorithms to extract semantics from ROM diagrams can be seen from Chen & Zeng. Conflict identification. Contradiction, which can be seen as conflict, is a central concept in TRIZ methodology.  Three conflicts were identified. administrative, technical, and physical. Administrative contradiction is a situation where something is required to make or receive some result to avoid the undesirable phenomenon, but it is not known how to achieve the result. The administrative contradiction itself is provisional, has no heuristic value, and does not show a direction to the answer. Technical contradiction, which represents a conflict between two subsystems, is a situation where an action is simultaneously useful and harmful. Physical contradiction is a situation where a given subsystem should have property A to execute a necessary function and property non-A or anti-A to satisfy the conditions of a problem. Different approaches are adopted in TRIZ for different kind of contradictions, most of which are for engineering domain due to its dependency on engineering parameters. Conflicts are also considered as the driving force in the EBD process. By proper identification of all those conflicts, a designer will be able to develop satisfactory solutions for the design problem. In EBD, a conflict is formulated as a composition of three basic elements. two competing objects and one resource object that the former two objects contend for Yan.  A resource object refers to any object that can be used to produce an action on its environment or to accommodate an object’s action on its environment. A conflict thus refers to an insufficiency of resources for an object to produce a desired action on its environment or to accommodate the object’s action on its environment. EBD defines two types of conflicts. active and reactive conflicts depending on when the resource is consumed. Conflict associated with the triggering of an action is active, which is generally consumed before the interaction occurs whereas the one associated with the accommodation of an action is reactive, which would generally consume the resource while the interaction occurs. Fig10 shows the structure of a conflict. Design conflicts can be identified from the ROM diagram generated from environment analysis by following a procedure to be introduced in a separate paper. A critical conflict can be further determined based on the relations among the identified design conflicts. Solution generation. In generating design solutions, a design process was divided into two parts: atomic design and the recursive resolution of a complex design problem. Atomic design is where knowledge is available or can be systematically discovered to resolve a conflict. Hence, it depends on the designer’s experience and background. Obviously, an experienced designer can have a more complex atomic design than a novice one may have. Recursive resolution of a complex design problem can be conducted through environment decomposition, which will identify the key conflict to start with. Due to the limitation of space, we will briefly summarize the concepts in solution generation. The details will be provided in a separate paper. Atomic design is supported by a set of atomic requirements, atomic solutions, and atomic design knowledge. Indeed, these atomic objects are a part of the subject of study of the ontological basis of engineering. The atomic design problem can be solved by applying an exploration-based model proposed by Smither. Design creativity may occur when the set of atomic design knowledge is extended. The input for the atomic design process is a design conflict, which is equivalent of physical contradiction in TRIZ. Therefore, the four separation heuristics from TRIZ can be applied: separation in space, separation in time, separation upon condition, and separation between parts and whole. In addition, new components can be added as an approach to addressing the separation upon condition. This process is shown in Fig11. The strategy above will result in one of the two situations. adjustment of existing design parameters need to be optimized. new component needed to connect unsolved/connected physical effects in the ROM diagram. For the details, please refer to Section4 in primitive design.  It must be noted, however, that the methods developed so far are all heuristic. It is the author’s belief that this is one of the critical stages for design creativity to happen. One advantage of the EBD is to guide designers to rapidly identify this focus so that creative solutions may be generated with a more targeted effort. The core of the recursive resolution strategy consists of a requirement decomposition operator and structure recomposition operator. The recomposition operator embodies the approaches to dealing with the conflicts between the newly generated solution and the existing solutions and problems, which leads to the reformulation of the original design problem. Those operators were further refined in (Zeng & Gu, 1999a), based on which an environment decomposition-based method was proposed (Zeng & Gu, 2001). The environment decomposition process is updated in Table6 by using the ROM. procedure for solution generation based on environment decomposition. Find the critical environment component from the ROM diagram. Resolve the conflict associated with the critical environment component by applying the atomic design process. Update the ROM diagram. Repeat the EBD process with the updated ROM diagram. By combining the atomic design and recursive resolution process, the general solution generation process can follow the one shown in Fig12. In summary, the EBD provides designers a sense of direction by guiding them to collect the necessary and sufficient information for a design task, by supporting them to determine the focus at each stage of design, by helping them decompose a complex problem into atomic ones, and by investigating potential solutions for each atomic design problem. This could help designers manage their mental stress in solving a design problem, which increases their chances to take advantage of their creative potentials. This qualitatively shows that EBD could be an effective approach with respect to the third requirement for effective design methodology. A major problem faced by all the design methodologies is how to validate them. Experimental validation and case studies, are two most widely accepted approaches for testing a design methodology (Blessing & Chakrabarti, 2009). We have set up a cognitive experiment environment and developed a new theory of design creativity that can validate the effectiveness of EBD by quantifying the mental stresses throughout the design process by analyzing the characteristics of design processes and by comparing the EBD with other existing design methodologies. In addition, The EBD methodology has also been successfully applied to various industrial projects including design of algorithms for finite element mesh generation sketch interpretation, curve reconstruction and conceptual modeling design of mechanisms for IP protection in collaborative design; design of quality management systems and design of medical devices. The EBD aims to provide designers the right direction for the continuous definition and solving of a design problem.  It includes three activities environment analysis, conflict identification, and solution generation, which can be carried out simultaneously and recursively.  The EBD stems from the observation that design aims to change an existing environment to a desired one by generating a new artefact. Design starts from the environment, serves the environment, and changes the environment. This environment changing process implies a recursive evolution of design problems, design knowledge, and design solutions.  Four major requirements for an effective design methodology are formulated from the perspective of the nature of design, cognitive model of design, and driving forces underlying design. to help designers jump out of the recursive loop between design problems, design knowledge, and design solutions. to guide both routine and creative design naturally. to help designers maintain his/her mental stress to an optimal level during the design process. to include naturally the conditions for the evolution of the design. Fundamental methods supporting the EBD are also introduced. The core of those fundamentals is ROM–Recursive Object Model, based on which environment analysis, conflict identification, and solution generation are conducted. Procedures for each design activity are presented. The EBD3 can be naturally applied to transdisciplinary design in that each disciplinary will reflect a part of the environment for the product to be designed. The product can be anything that is created by human such as hardware, software, concepts, systems, and plans. 